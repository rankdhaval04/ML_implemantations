# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x3PjtoojMpw1mLx-TzXCHa7RZOHCy0hh
"""

"""KNN implemantation using Euclidean distance"""

import math
import numpy as np

def Euclidean_distance(point,dataset):
  
  distance=[]
  o_index=0
  for data in dataset:
    index=0
    cost=0;
    for dimension in point:
      
      cost=cost+math.sqrt(((data[index]-dimension)**2))
      index=index+1;
      
    distance.append(cost)
    
  return distance
    
'''data=[[5,2],[3,2],[2,2],[1,2],[3,2],[5,2]]
associate=[5,3,2,2,3,5]'''


dist=Euclidean_distance([5,2],data)

dist.sort()

"""now as par requrement we can change our feature

    1. predict numeric value (here we are taking 3 nearest point you can take as par your requirement)"""
prediction=0
for value in range(0,3):
  """You can code here as par your requirements"""